/* tslint:disable */
/* eslint-disable */
/**
 * Patrehub API
 * This is a description of what this does
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Campaign,
  ErrorResponse,
  GetGithubInstallationsResponse,
  GithubAccount,
  Membership,
  User,
} from '../models/index';
import {
    CampaignFromJSON,
    CampaignToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    GetGithubInstallationsResponseFromJSON,
    GetGithubInstallationsResponseToJSON,
    GithubAccountFromJSON,
    GithubAccountToJSON,
    MembershipFromJSON,
    MembershipToJSON,
    UserFromJSON,
    UserToJSON,
} from '../models/index';

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Get Github Installations
     * 
     */
    async getGithubInstallationsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetGithubInstallationsResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/github/installations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetGithubInstallationsResponseFromJSON(jsonValue));
    }

    /**
     * Get Github Installations
     * 
     */
    async getGithubInstallations(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetGithubInstallationsResponse> {
        const response = await this.getGithubInstallationsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Github Profile
     * 
     */
    async getGithubProfileRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GithubAccount>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/github/profile`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GithubAccountFromJSON(jsonValue));
    }

    /**
     * Get Github Profile
     * 
     */
    async getGithubProfile(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GithubAccount> {
        const response = await this.getGithubProfileRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get profile
     * 
     */
    async getProfileRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<User>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/profile`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));
    }

    /**
     * Get profile
     * 
     */
    async getProfile(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<User> {
        const response = await this.getProfileRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get profile campaigns
     * 
     */
    async getProfileCampaignsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Campaign>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/profile/campaigns`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CampaignFromJSON));
    }

    /**
     * Get profile campaigns
     * 
     */
    async getProfileCampaigns(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Campaign>> {
        const response = await this.getProfileCampaignsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get profile memberships
     * 
     */
    async getProfileMembershipsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Membership>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/profile/memberships`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MembershipFromJSON));
    }

    /**
     * Get profile memberships
     * 
     */
    async getProfileMemberships(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Membership>> {
        const response = await this.getProfileMembershipsRaw(initOverrides);
        return await response.value();
    }

}
