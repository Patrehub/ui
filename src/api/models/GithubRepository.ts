/* tslint:disable */
/* eslint-disable */
/**
 * Patrehub API
 * This is a description of what this does
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GithubAccount } from './GithubAccount';
import {
    GithubAccountFromJSON,
    GithubAccountFromJSONTyped,
    GithubAccountToJSON,
    GithubAccountToJSONTyped,
} from './GithubAccount';

/**
 * 
 * @export
 * @interface GithubRepository
 */
export interface GithubRepository {
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    nodeId: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    fullName: string;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    _private: boolean;
    /**
     * 
     * @type {GithubAccount}
     * @memberof GithubRepository
     */
    owner: GithubAccount;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    htmlUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    description: string;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    fork: boolean;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    forksUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    keysUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    collaboratorsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    teamsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    hooksUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    issueEventsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    eventsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    assigneesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    branchesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    tagsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    blobsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    gitTagsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    gitRefsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    treesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    statusesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    languagesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    stargazersUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    contributorsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    subscribersUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    subscriptionUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    commitsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    gitCommitsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    commentsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    issueCommentUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    contentsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    compareUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    mergesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    archiveUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    downloadsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    issuesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    pullsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    milestonesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    notificationsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    labelsUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    releasesUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    deploymentsUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof GithubRepository
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof GithubRepository
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof GithubRepository
     */
    pushedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    gitUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    sshUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    cloneUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    svnUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    homepage: string;
    /**
     * 
     * @type {number}
     * @memberof GithubRepository
     */
    size: number;
    /**
     * 
     * @type {number}
     * @memberof GithubRepository
     */
    stargazersCount: number;
    /**
     * 
     * @type {number}
     * @memberof GithubRepository
     */
    watchersCount: number;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    language: string;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    hasIssues: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    hasProjects: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    hasDownloads: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    hasWiki: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    hasPages: boolean;
    /**
     * 
     * @type {number}
     * @memberof GithubRepository
     */
    forksCount: number;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    mirrorUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    archived: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    disabled: boolean;
    /**
     * 
     * @type {number}
     * @memberof GithubRepository
     */
    openIssuesCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    allowForking: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GithubRepository
     */
    isTemplate: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof GithubRepository
     */
    topics: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    visibility: string;
    /**
     * 
     * @type {number}
     * @memberof GithubRepository
     */
    forks: number;
    /**
     * 
     * @type {number}
     * @memberof GithubRepository
     */
    openIssues: number;
    /**
     * 
     * @type {number}
     * @memberof GithubRepository
     */
    watchers: number;
    /**
     * 
     * @type {string}
     * @memberof GithubRepository
     */
    defaultBranch: string;
}

/**
 * Check if a given object implements the GithubRepository interface.
 */
export function instanceOfGithubRepository(value: object): value is GithubRepository {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('nodeId' in value) || value['nodeId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('_private' in value) || value['_private'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('htmlUrl' in value) || value['htmlUrl'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('fork' in value) || value['fork'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('forksUrl' in value) || value['forksUrl'] === undefined) return false;
    if (!('keysUrl' in value) || value['keysUrl'] === undefined) return false;
    if (!('collaboratorsUrl' in value) || value['collaboratorsUrl'] === undefined) return false;
    if (!('teamsUrl' in value) || value['teamsUrl'] === undefined) return false;
    if (!('hooksUrl' in value) || value['hooksUrl'] === undefined) return false;
    if (!('issueEventsUrl' in value) || value['issueEventsUrl'] === undefined) return false;
    if (!('eventsUrl' in value) || value['eventsUrl'] === undefined) return false;
    if (!('assigneesUrl' in value) || value['assigneesUrl'] === undefined) return false;
    if (!('branchesUrl' in value) || value['branchesUrl'] === undefined) return false;
    if (!('tagsUrl' in value) || value['tagsUrl'] === undefined) return false;
    if (!('blobsUrl' in value) || value['blobsUrl'] === undefined) return false;
    if (!('gitTagsUrl' in value) || value['gitTagsUrl'] === undefined) return false;
    if (!('gitRefsUrl' in value) || value['gitRefsUrl'] === undefined) return false;
    if (!('treesUrl' in value) || value['treesUrl'] === undefined) return false;
    if (!('statusesUrl' in value) || value['statusesUrl'] === undefined) return false;
    if (!('languagesUrl' in value) || value['languagesUrl'] === undefined) return false;
    if (!('stargazersUrl' in value) || value['stargazersUrl'] === undefined) return false;
    if (!('contributorsUrl' in value) || value['contributorsUrl'] === undefined) return false;
    if (!('subscribersUrl' in value) || value['subscribersUrl'] === undefined) return false;
    if (!('subscriptionUrl' in value) || value['subscriptionUrl'] === undefined) return false;
    if (!('commitsUrl' in value) || value['commitsUrl'] === undefined) return false;
    if (!('gitCommitsUrl' in value) || value['gitCommitsUrl'] === undefined) return false;
    if (!('commentsUrl' in value) || value['commentsUrl'] === undefined) return false;
    if (!('issueCommentUrl' in value) || value['issueCommentUrl'] === undefined) return false;
    if (!('contentsUrl' in value) || value['contentsUrl'] === undefined) return false;
    if (!('compareUrl' in value) || value['compareUrl'] === undefined) return false;
    if (!('mergesUrl' in value) || value['mergesUrl'] === undefined) return false;
    if (!('archiveUrl' in value) || value['archiveUrl'] === undefined) return false;
    if (!('downloadsUrl' in value) || value['downloadsUrl'] === undefined) return false;
    if (!('issuesUrl' in value) || value['issuesUrl'] === undefined) return false;
    if (!('pullsUrl' in value) || value['pullsUrl'] === undefined) return false;
    if (!('milestonesUrl' in value) || value['milestonesUrl'] === undefined) return false;
    if (!('notificationsUrl' in value) || value['notificationsUrl'] === undefined) return false;
    if (!('labelsUrl' in value) || value['labelsUrl'] === undefined) return false;
    if (!('releasesUrl' in value) || value['releasesUrl'] === undefined) return false;
    if (!('deploymentsUrl' in value) || value['deploymentsUrl'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('pushedAt' in value) || value['pushedAt'] === undefined) return false;
    if (!('gitUrl' in value) || value['gitUrl'] === undefined) return false;
    if (!('sshUrl' in value) || value['sshUrl'] === undefined) return false;
    if (!('cloneUrl' in value) || value['cloneUrl'] === undefined) return false;
    if (!('svnUrl' in value) || value['svnUrl'] === undefined) return false;
    if (!('homepage' in value) || value['homepage'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('stargazersCount' in value) || value['stargazersCount'] === undefined) return false;
    if (!('watchersCount' in value) || value['watchersCount'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('hasIssues' in value) || value['hasIssues'] === undefined) return false;
    if (!('hasProjects' in value) || value['hasProjects'] === undefined) return false;
    if (!('hasDownloads' in value) || value['hasDownloads'] === undefined) return false;
    if (!('hasWiki' in value) || value['hasWiki'] === undefined) return false;
    if (!('hasPages' in value) || value['hasPages'] === undefined) return false;
    if (!('forksCount' in value) || value['forksCount'] === undefined) return false;
    if (!('archived' in value) || value['archived'] === undefined) return false;
    if (!('disabled' in value) || value['disabled'] === undefined) return false;
    if (!('openIssuesCount' in value) || value['openIssuesCount'] === undefined) return false;
    if (!('allowForking' in value) || value['allowForking'] === undefined) return false;
    if (!('isTemplate' in value) || value['isTemplate'] === undefined) return false;
    if (!('topics' in value) || value['topics'] === undefined) return false;
    if (!('visibility' in value) || value['visibility'] === undefined) return false;
    if (!('forks' in value) || value['forks'] === undefined) return false;
    if (!('openIssues' in value) || value['openIssues'] === undefined) return false;
    if (!('watchers' in value) || value['watchers'] === undefined) return false;
    if (!('defaultBranch' in value) || value['defaultBranch'] === undefined) return false;
    return true;
}

export function GithubRepositoryFromJSON(json: any): GithubRepository {
    return GithubRepositoryFromJSONTyped(json, false);
}

export function GithubRepositoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): GithubRepository {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'nodeId': json['node_id'],
        'name': json['name'],
        'fullName': json['full_name'],
        '_private': json['private'],
        'owner': GithubAccountFromJSON(json['owner']),
        'htmlUrl': json['html_url'],
        'description': json['description'],
        'fork': json['fork'],
        'url': json['url'],
        'forksUrl': json['forks_url'],
        'keysUrl': json['keys_url'],
        'collaboratorsUrl': json['collaborators_url'],
        'teamsUrl': json['teams_url'],
        'hooksUrl': json['hooks_url'],
        'issueEventsUrl': json['issue_events_url'],
        'eventsUrl': json['events_url'],
        'assigneesUrl': json['assignees_url'],
        'branchesUrl': json['branches_url'],
        'tagsUrl': json['tags_url'],
        'blobsUrl': json['blobs_url'],
        'gitTagsUrl': json['git_tags_url'],
        'gitRefsUrl': json['git_refs_url'],
        'treesUrl': json['trees_url'],
        'statusesUrl': json['statuses_url'],
        'languagesUrl': json['languages_url'],
        'stargazersUrl': json['stargazers_url'],
        'contributorsUrl': json['contributors_url'],
        'subscribersUrl': json['subscribers_url'],
        'subscriptionUrl': json['subscription_url'],
        'commitsUrl': json['commits_url'],
        'gitCommitsUrl': json['git_commits_url'],
        'commentsUrl': json['comments_url'],
        'issueCommentUrl': json['issue_comment_url'],
        'contentsUrl': json['contents_url'],
        'compareUrl': json['compare_url'],
        'mergesUrl': json['merges_url'],
        'archiveUrl': json['archive_url'],
        'downloadsUrl': json['downloads_url'],
        'issuesUrl': json['issues_url'],
        'pullsUrl': json['pulls_url'],
        'milestonesUrl': json['milestones_url'],
        'notificationsUrl': json['notifications_url'],
        'labelsUrl': json['labels_url'],
        'releasesUrl': json['releases_url'],
        'deploymentsUrl': json['deployments_url'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'pushedAt': (new Date(json['pushed_at'])),
        'gitUrl': json['git_url'],
        'sshUrl': json['ssh_url'],
        'cloneUrl': json['clone_url'],
        'svnUrl': json['svn_url'],
        'homepage': json['homepage'],
        'size': json['size'],
        'stargazersCount': json['stargazers_count'],
        'watchersCount': json['watchers_count'],
        'language': json['language'],
        'hasIssues': json['has_issues'],
        'hasProjects': json['has_projects'],
        'hasDownloads': json['has_downloads'],
        'hasWiki': json['has_wiki'],
        'hasPages': json['has_pages'],
        'forksCount': json['forks_count'],
        'mirrorUrl': json['mirror_url'] == null ? undefined : json['mirror_url'],
        'archived': json['archived'],
        'disabled': json['disabled'],
        'openIssuesCount': json['open_issues_count'],
        'allowForking': json['allow_forking'],
        'isTemplate': json['is_template'],
        'topics': json['topics'],
        'visibility': json['visibility'],
        'forks': json['forks'],
        'openIssues': json['open_issues'],
        'watchers': json['watchers'],
        'defaultBranch': json['default_branch'],
    };
}

export function GithubRepositoryToJSON(json: any): GithubRepository {
    return GithubRepositoryToJSONTyped(json, false);
}

export function GithubRepositoryToJSONTyped(value?: GithubRepository | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'node_id': value['nodeId'],
        'name': value['name'],
        'full_name': value['fullName'],
        'private': value['_private'],
        'owner': GithubAccountToJSON(value['owner']),
        'html_url': value['htmlUrl'],
        'description': value['description'],
        'fork': value['fork'],
        'url': value['url'],
        'forks_url': value['forksUrl'],
        'keys_url': value['keysUrl'],
        'collaborators_url': value['collaboratorsUrl'],
        'teams_url': value['teamsUrl'],
        'hooks_url': value['hooksUrl'],
        'issue_events_url': value['issueEventsUrl'],
        'events_url': value['eventsUrl'],
        'assignees_url': value['assigneesUrl'],
        'branches_url': value['branchesUrl'],
        'tags_url': value['tagsUrl'],
        'blobs_url': value['blobsUrl'],
        'git_tags_url': value['gitTagsUrl'],
        'git_refs_url': value['gitRefsUrl'],
        'trees_url': value['treesUrl'],
        'statuses_url': value['statusesUrl'],
        'languages_url': value['languagesUrl'],
        'stargazers_url': value['stargazersUrl'],
        'contributors_url': value['contributorsUrl'],
        'subscribers_url': value['subscribersUrl'],
        'subscription_url': value['subscriptionUrl'],
        'commits_url': value['commitsUrl'],
        'git_commits_url': value['gitCommitsUrl'],
        'comments_url': value['commentsUrl'],
        'issue_comment_url': value['issueCommentUrl'],
        'contents_url': value['contentsUrl'],
        'compare_url': value['compareUrl'],
        'merges_url': value['mergesUrl'],
        'archive_url': value['archiveUrl'],
        'downloads_url': value['downloadsUrl'],
        'issues_url': value['issuesUrl'],
        'pulls_url': value['pullsUrl'],
        'milestones_url': value['milestonesUrl'],
        'notifications_url': value['notificationsUrl'],
        'labels_url': value['labelsUrl'],
        'releases_url': value['releasesUrl'],
        'deployments_url': value['deploymentsUrl'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'pushed_at': ((value['pushedAt']).toISOString()),
        'git_url': value['gitUrl'],
        'ssh_url': value['sshUrl'],
        'clone_url': value['cloneUrl'],
        'svn_url': value['svnUrl'],
        'homepage': value['homepage'],
        'size': value['size'],
        'stargazers_count': value['stargazersCount'],
        'watchers_count': value['watchersCount'],
        'language': value['language'],
        'has_issues': value['hasIssues'],
        'has_projects': value['hasProjects'],
        'has_downloads': value['hasDownloads'],
        'has_wiki': value['hasWiki'],
        'has_pages': value['hasPages'],
        'forks_count': value['forksCount'],
        'mirror_url': value['mirrorUrl'],
        'archived': value['archived'],
        'disabled': value['disabled'],
        'open_issues_count': value['openIssuesCount'],
        'allow_forking': value['allowForking'],
        'is_template': value['isTemplate'],
        'topics': value['topics'],
        'visibility': value['visibility'],
        'forks': value['forks'],
        'open_issues': value['openIssues'],
        'watchers': value['watchers'],
        'default_branch': value['defaultBranch'],
    };
}

