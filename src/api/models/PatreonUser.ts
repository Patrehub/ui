/* tslint:disable */
/* eslint-disable */
/**
 * Patrehub API
 * This is a description of what this does
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PatreonPledge } from './PatreonPledge';
import {
    PatreonPledgeFromJSON,
    PatreonPledgeFromJSONTyped,
    PatreonPledgeToJSON,
    PatreonPledgeToJSONTyped,
} from './PatreonPledge';
import type { PatreonCampaign } from './PatreonCampaign';
import {
    PatreonCampaignFromJSON,
    PatreonCampaignFromJSONTyped,
    PatreonCampaignToJSON,
    PatreonCampaignToJSONTyped,
} from './PatreonCampaign';

/**
 * 
 * @export
 * @interface PatreonUser
 */
export interface PatreonUser {
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    about: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    ageVerificationStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    appleId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonUser
     */
    canSeeNsfw: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    created: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    currentUserBlockStatus: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    defaultCountryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    discordId: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    facebook?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    facebookId?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    fullName: string;
    /**
     * 
     * @type {number}
     * @memberof PatreonUser
     */
    gender: number;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    googleId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonUser
     */
    hasPassword?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    imageUrl: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonUser
     */
    isDeleted: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonUser
     */
    isEmailVerified: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonUser
     */
    isNuked: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonUser
     */
    isSuspended: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    patronCurrency: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    thumbUrl: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    twitch?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    twitter?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    vanity: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonUser
     */
    youtube?: string;
    /**
     * 
     * @type {PatreonCampaign}
     * @memberof PatreonUser
     */
    campaign?: PatreonCampaign;
    /**
     * 
     * @type {Array<PatreonPledge>}
     * @memberof PatreonUser
     */
    pledges?: Array<PatreonPledge>;
}

/**
 * Check if a given object implements the PatreonUser interface.
 */
export function instanceOfPatreonUser(value: object): value is PatreonUser {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('about' in value) || value['about'] === undefined) return false;
    if (!('canSeeNsfw' in value) || value['canSeeNsfw'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('currentUserBlockStatus' in value) || value['currentUserBlockStatus'] === undefined) return false;
    if (!('discordId' in value) || value['discordId'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('gender' in value) || value['gender'] === undefined) return false;
    if (!('imageUrl' in value) || value['imageUrl'] === undefined) return false;
    if (!('isDeleted' in value) || value['isDeleted'] === undefined) return false;
    if (!('isEmailVerified' in value) || value['isEmailVerified'] === undefined) return false;
    if (!('isNuked' in value) || value['isNuked'] === undefined) return false;
    if (!('isSuspended' in value) || value['isSuspended'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('patronCurrency' in value) || value['patronCurrency'] === undefined) return false;
    if (!('thumbUrl' in value) || value['thumbUrl'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('vanity' in value) || value['vanity'] === undefined) return false;
    return true;
}

export function PatreonUserFromJSON(json: any): PatreonUser {
    return PatreonUserFromJSONTyped(json, false);
}

export function PatreonUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatreonUser {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'about': json['about'],
        'ageVerificationStatus': json['age_verification_status'] == null ? undefined : json['age_verification_status'],
        'appleId': json['apple_id'] == null ? undefined : json['apple_id'],
        'canSeeNsfw': json['can_see_nsfw'],
        'created': json['created'],
        'currentUserBlockStatus': json['current_user_block_status'],
        'defaultCountryCode': json['default_country_code'] == null ? undefined : json['default_country_code'],
        'discordId': json['discord_id'],
        'email': json['email'],
        'facebook': json['facebook'] == null ? undefined : json['facebook'],
        'facebookId': json['facebook_id'] == null ? undefined : json['facebook_id'],
        'firstName': json['first_name'],
        'fullName': json['full_name'],
        'gender': json['gender'],
        'googleId': json['google_id'] == null ? undefined : json['google_id'],
        'hasPassword': json['has_password'] == null ? undefined : json['has_password'],
        'imageUrl': json['image_url'],
        'isDeleted': json['is_deleted'],
        'isEmailVerified': json['is_email_verified'],
        'isNuked': json['is_nuked'],
        'isSuspended': json['is_suspended'],
        'lastName': json['last_name'],
        'patronCurrency': json['patron_currency'],
        'thumbUrl': json['thumb_url'],
        'twitch': json['twitch'] == null ? undefined : json['twitch'],
        'twitter': json['twitter'] == null ? undefined : json['twitter'],
        'url': json['url'],
        'vanity': json['vanity'],
        'youtube': json['youtube'] == null ? undefined : json['youtube'],
        'campaign': json['campaign'] == null ? undefined : PatreonCampaignFromJSON(json['campaign']),
        'pledges': json['pledges'] == null ? undefined : ((json['pledges'] as Array<any>).map(PatreonPledgeFromJSON)),
    };
}

export function PatreonUserToJSON(json: any): PatreonUser {
    return PatreonUserToJSONTyped(json, false);
}

export function PatreonUserToJSONTyped(value?: PatreonUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'about': value['about'],
        'age_verification_status': value['ageVerificationStatus'],
        'apple_id': value['appleId'],
        'can_see_nsfw': value['canSeeNsfw'],
        'created': value['created'],
        'current_user_block_status': value['currentUserBlockStatus'],
        'default_country_code': value['defaultCountryCode'],
        'discord_id': value['discordId'],
        'email': value['email'],
        'facebook': value['facebook'],
        'facebook_id': value['facebookId'],
        'first_name': value['firstName'],
        'full_name': value['fullName'],
        'gender': value['gender'],
        'google_id': value['googleId'],
        'has_password': value['hasPassword'],
        'image_url': value['imageUrl'],
        'is_deleted': value['isDeleted'],
        'is_email_verified': value['isEmailVerified'],
        'is_nuked': value['isNuked'],
        'is_suspended': value['isSuspended'],
        'last_name': value['lastName'],
        'patron_currency': value['patronCurrency'],
        'thumb_url': value['thumbUrl'],
        'twitch': value['twitch'],
        'twitter': value['twitter'],
        'url': value['url'],
        'vanity': value['vanity'],
        'youtube': value['youtube'],
        'campaign': PatreonCampaignToJSON(value['campaign']),
        'pledges': value['pledges'] == null ? undefined : ((value['pledges'] as Array<any>).map(PatreonPledgeToJSON)),
    };
}

