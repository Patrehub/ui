/* tslint:disable */
/* eslint-disable */
/**
 * Patrehub API
 * This is a description of what this does
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatreonReward
 */
export interface PatreonReward {
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof PatreonReward
     */
    amount: number;
    /**
     * 
     * @type {number}
     * @memberof PatreonReward
     */
    amountCents: number;
    /**
     * 
     * @type {Date}
     * @memberof PatreonReward
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    currency: string;
    /**
     * 
     * @type {number}
     * @memberof PatreonReward
     */
    declinedPatronCount: number;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof PatreonReward
     */
    editedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    imageUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonReward
     */
    isFreeTier: boolean;
    /**
     * 
     * @type {number}
     * @memberof PatreonReward
     */
    patronAmountCents: number;
    /**
     * 
     * @type {number}
     * @memberof PatreonReward
     */
    patronCount: number;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    patronCurrency: string;
    /**
     * 
     * @type {number}
     * @memberof PatreonReward
     */
    postCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonReward
     */
    published: boolean;
    /**
     * 
     * @type {Date}
     * @memberof PatreonReward
     */
    publishedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof PatreonReward
     */
    remaining?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PatreonReward
     */
    requiresShipping?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof PatreonReward
     */
    unpublishedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    url: string;
    /**
     * 
     * @type {number}
     * @memberof PatreonReward
     */
    userLimit?: number;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    welcomeMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    welcomeMessageUnsafe?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    welcomeVideoEmbed?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonReward
     */
    welcomeVideoUrl?: string;
}

/**
 * Check if a given object implements the PatreonReward interface.
 */
export function instanceOfPatreonReward(value: object): value is PatreonReward {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('amountCents' in value) || value['amountCents'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('declinedPatronCount' in value) || value['declinedPatronCount'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('editedAt' in value) || value['editedAt'] === undefined) return false;
    if (!('isFreeTier' in value) || value['isFreeTier'] === undefined) return false;
    if (!('patronAmountCents' in value) || value['patronAmountCents'] === undefined) return false;
    if (!('patronCount' in value) || value['patronCount'] === undefined) return false;
    if (!('patronCurrency' in value) || value['patronCurrency'] === undefined) return false;
    if (!('postCount' in value) || value['postCount'] === undefined) return false;
    if (!('published' in value) || value['published'] === undefined) return false;
    if (!('publishedAt' in value) || value['publishedAt'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function PatreonRewardFromJSON(json: any): PatreonReward {
    return PatreonRewardFromJSONTyped(json, false);
}

export function PatreonRewardFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatreonReward {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'amount': json['amount'],
        'amountCents': json['amount_cents'],
        'createdAt': (new Date(json['created_at'])),
        'currency': json['currency'],
        'declinedPatronCount': json['declined_patron_count'],
        'description': json['description'],
        'editedAt': (new Date(json['edited_at'])),
        'imageUrl': json['image_url'] == null ? undefined : json['image_url'],
        'isFreeTier': json['is_free_tier'],
        'patronAmountCents': json['patron_amount_cents'],
        'patronCount': json['patron_count'],
        'patronCurrency': json['patron_currency'],
        'postCount': json['post_count'],
        'published': json['published'],
        'publishedAt': (new Date(json['published_at'])),
        'remaining': json['remaining'] == null ? undefined : json['remaining'],
        'requiresShipping': json['requires_shipping'] == null ? undefined : json['requires_shipping'],
        'title': json['title'],
        'unpublishedAt': json['unpublished_at'] == null ? undefined : (new Date(json['unpublished_at'])),
        'url': json['url'],
        'userLimit': json['user_limit'] == null ? undefined : json['user_limit'],
        'welcomeMessage': json['welcome_message'] == null ? undefined : json['welcome_message'],
        'welcomeMessageUnsafe': json['welcome_message_unsafe'] == null ? undefined : json['welcome_message_unsafe'],
        'welcomeVideoEmbed': json['welcome_video_embed'] == null ? undefined : json['welcome_video_embed'],
        'welcomeVideoUrl': json['welcome_video_url'] == null ? undefined : json['welcome_video_url'],
    };
}

export function PatreonRewardToJSON(json: any): PatreonReward {
    return PatreonRewardToJSONTyped(json, false);
}

export function PatreonRewardToJSONTyped(value?: PatreonReward | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'amount': value['amount'],
        'amount_cents': value['amountCents'],
        'created_at': ((value['createdAt']).toISOString()),
        'currency': value['currency'],
        'declined_patron_count': value['declinedPatronCount'],
        'description': value['description'],
        'edited_at': ((value['editedAt']).toISOString()),
        'image_url': value['imageUrl'],
        'is_free_tier': value['isFreeTier'],
        'patron_amount_cents': value['patronAmountCents'],
        'patron_count': value['patronCount'],
        'patron_currency': value['patronCurrency'],
        'post_count': value['postCount'],
        'published': value['published'],
        'published_at': ((value['publishedAt']).toISOString()),
        'remaining': value['remaining'],
        'requires_shipping': value['requiresShipping'],
        'title': value['title'],
        'unpublished_at': value['unpublishedAt'] == null ? undefined : ((value['unpublishedAt']).toISOString()),
        'url': value['url'],
        'user_limit': value['userLimit'],
        'welcome_message': value['welcomeMessage'],
        'welcome_message_unsafe': value['welcomeMessageUnsafe'],
        'welcome_video_embed': value['welcomeVideoEmbed'],
        'welcome_video_url': value['welcomeVideoUrl'],
    };
}

