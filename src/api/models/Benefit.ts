/* tslint:disable */
/* eslint-disable */
/**
 * Patrehub API
 * This is a description of what this does
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Benefit
 */
export interface Benefit {
    /**
     * 
     * @type {string}
     * @memberof Benefit
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Benefit
     */
    appExternalId?: string;
    /**
     * 
     * @type {string}
     * @memberof Benefit
     */
    appMeta?: string;
    /**
     * 
     * @type {string}
     * @memberof Benefit
     */
    benefitType: string;
    /**
     * 
     * @type {Date}
     * @memberof Benefit
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Benefit
     */
    description: string;
    /**
     * 
     * @type {boolean}
     * @memberof Benefit
     */
    isDeleted: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Benefit
     */
    isEnded: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Benefit
     */
    isPublished: boolean;
    /**
     * 
     * @type {string}
     * @memberof Benefit
     */
    ruleType: string;
    /**
     * 
     * @type {number}
     * @memberof Benefit
     */
    tiersCount: number;
    /**
     * 
     * @type {string}
     * @memberof Benefit
     */
    title: string;
}

/**
 * Check if a given object implements the Benefit interface.
 */
export function instanceOfBenefit(value: object): value is Benefit {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('benefitType' in value) || value['benefitType'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('isDeleted' in value) || value['isDeleted'] === undefined) return false;
    if (!('isEnded' in value) || value['isEnded'] === undefined) return false;
    if (!('isPublished' in value) || value['isPublished'] === undefined) return false;
    if (!('ruleType' in value) || value['ruleType'] === undefined) return false;
    if (!('tiersCount' in value) || value['tiersCount'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function BenefitFromJSON(json: any): Benefit {
    return BenefitFromJSONTyped(json, false);
}

export function BenefitFromJSONTyped(json: any, ignoreDiscriminator: boolean): Benefit {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'appExternalId': json['app_external_id'] == null ? undefined : json['app_external_id'],
        'appMeta': json['app_meta'] == null ? undefined : json['app_meta'],
        'benefitType': json['benefit_type'],
        'createdAt': (new Date(json['created_at'])),
        'description': json['description'],
        'isDeleted': json['is_deleted'],
        'isEnded': json['is_ended'],
        'isPublished': json['is_published'],
        'ruleType': json['rule_type'],
        'tiersCount': json['tiers_count'],
        'title': json['title'],
    };
}

export function BenefitToJSON(json: any): Benefit {
    return BenefitToJSONTyped(json, false);
}

export function BenefitToJSONTyped(value?: Benefit | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'app_external_id': value['appExternalId'],
        'app_meta': value['appMeta'],
        'benefit_type': value['benefitType'],
        'created_at': ((value['createdAt']).toISOString()),
        'description': value['description'],
        'is_deleted': value['isDeleted'],
        'is_ended': value['isEnded'],
        'is_published': value['isPublished'],
        'rule_type': value['ruleType'],
        'tiers_count': value['tiersCount'],
        'title': value['title'],
    };
}

