/* tslint:disable */
/* eslint-disable */
/**
 * Patrehub API
 * This is a description of what this does
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { Benefit } from './Benefit';
import {
    BenefitFromJSON,
    BenefitFromJSONTyped,
    BenefitToJSON,
    BenefitToJSONTyped,
} from './Benefit';
import type { Tier } from './Tier';
import {
    TierFromJSON,
    TierFromJSONTyped,
    TierToJSON,
    TierToJSONTyped,
} from './Tier';

/**
 * 
 * @export
 * @interface Campaign
 */
export interface Campaign {
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof Campaign
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    creationName: string;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    discordServerId?: string;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    googleAnalyticsId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Campaign
     */
    hasRss: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Campaign
     */
    hasSentRssNotify: boolean;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    imageSmallUrl: string;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    imageUrl: string;
    /**
     * 
     * @type {boolean}
     * @memberof Campaign
     */
    isChargedImmediately: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Campaign
     */
    isMonthly: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Campaign
     */
    isNsfw: boolean;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    mainVideoEmbed: string;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    mainVideoUrl: string;
    /**
     * 
     * @type {number}
     * @memberof Campaign
     */
    patronCount: number;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    payPerName: string;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    pledgeUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof Campaign
     */
    publishedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    summary: string;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    vanity: string;
    /**
     * 
     * @type {Array<Benefit>}
     * @memberof Campaign
     */
    benefits: Array<Benefit>;
    /**
     * 
     * @type {User}
     * @memberof Campaign
     */
    createor?: User;
    /**
     * 
     * @type {Array<Tier>}
     * @memberof Campaign
     */
    tiers: Array<Tier>;
}

/**
 * Check if a given object implements the Campaign interface.
 */
export function instanceOfCampaign(value: object): value is Campaign {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('creationName' in value) || value['creationName'] === undefined) return false;
    if (!('hasRss' in value) || value['hasRss'] === undefined) return false;
    if (!('hasSentRssNotify' in value) || value['hasSentRssNotify'] === undefined) return false;
    if (!('imageSmallUrl' in value) || value['imageSmallUrl'] === undefined) return false;
    if (!('imageUrl' in value) || value['imageUrl'] === undefined) return false;
    if (!('isChargedImmediately' in value) || value['isChargedImmediately'] === undefined) return false;
    if (!('isMonthly' in value) || value['isMonthly'] === undefined) return false;
    if (!('isNsfw' in value) || value['isNsfw'] === undefined) return false;
    if (!('mainVideoEmbed' in value) || value['mainVideoEmbed'] === undefined) return false;
    if (!('mainVideoUrl' in value) || value['mainVideoUrl'] === undefined) return false;
    if (!('patronCount' in value) || value['patronCount'] === undefined) return false;
    if (!('payPerName' in value) || value['payPerName'] === undefined) return false;
    if (!('pledgeUrl' in value) || value['pledgeUrl'] === undefined) return false;
    if (!('publishedAt' in value) || value['publishedAt'] === undefined) return false;
    if (!('summary' in value) || value['summary'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('vanity' in value) || value['vanity'] === undefined) return false;
    if (!('benefits' in value) || value['benefits'] === undefined) return false;
    if (!('tiers' in value) || value['tiers'] === undefined) return false;
    return true;
}

export function CampaignFromJSON(json: any): Campaign {
    return CampaignFromJSONTyped(json, false);
}

export function CampaignFromJSONTyped(json: any, ignoreDiscriminator: boolean): Campaign {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'creationName': json['creation_name'],
        'discordServerId': json['discord_server_id'] == null ? undefined : json['discord_server_id'],
        'googleAnalyticsId': json['google_analytics_id'] == null ? undefined : json['google_analytics_id'],
        'hasRss': json['has_rss'],
        'hasSentRssNotify': json['has_sent_rss_notify'],
        'imageSmallUrl': json['image_small_url'],
        'imageUrl': json['image_url'],
        'isChargedImmediately': json['is_charged_immediately'],
        'isMonthly': json['is_monthly'],
        'isNsfw': json['is_nsfw'],
        'mainVideoEmbed': json['main_video_embed'],
        'mainVideoUrl': json['main_video_url'],
        'patronCount': json['patron_count'],
        'payPerName': json['pay_per_name'],
        'pledgeUrl': json['pledge_url'],
        'publishedAt': (new Date(json['published_at'])),
        'summary': json['summary'],
        'url': json['url'],
        'vanity': json['vanity'],
        'benefits': ((json['benefits'] as Array<any>).map(BenefitFromJSON)),
        'createor': json['createor'] == null ? undefined : UserFromJSON(json['createor']),
        'tiers': ((json['tiers'] as Array<any>).map(TierFromJSON)),
    };
}

export function CampaignToJSON(json: any): Campaign {
    return CampaignToJSONTyped(json, false);
}

export function CampaignToJSONTyped(value?: Campaign | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'created_at': ((value['createdAt']).toISOString()),
        'creation_name': value['creationName'],
        'discord_server_id': value['discordServerId'],
        'google_analytics_id': value['googleAnalyticsId'],
        'has_rss': value['hasRss'],
        'has_sent_rss_notify': value['hasSentRssNotify'],
        'image_small_url': value['imageSmallUrl'],
        'image_url': value['imageUrl'],
        'is_charged_immediately': value['isChargedImmediately'],
        'is_monthly': value['isMonthly'],
        'is_nsfw': value['isNsfw'],
        'main_video_embed': value['mainVideoEmbed'],
        'main_video_url': value['mainVideoUrl'],
        'patron_count': value['patronCount'],
        'pay_per_name': value['payPerName'],
        'pledge_url': value['pledgeUrl'],
        'published_at': ((value['publishedAt']).toISOString()),
        'summary': value['summary'],
        'url': value['url'],
        'vanity': value['vanity'],
        'benefits': ((value['benefits'] as Array<any>).map(BenefitToJSON)),
        'createor': UserToJSON(value['createor']),
        'tiers': ((value['tiers'] as Array<any>).map(TierToJSON)),
    };
}

