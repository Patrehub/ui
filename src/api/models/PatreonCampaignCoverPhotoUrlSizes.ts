/* tslint:disable */
/* eslint-disable */
/**
 * Patrehub API
 * This is a description of what this does
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatreonCampaignCoverPhotoUrlSizes
 */
export interface PatreonCampaignCoverPhotoUrlSizes {
    /**
     * 
     * @type {string}
     * @memberof PatreonCampaignCoverPhotoUrlSizes
     */
    large?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonCampaignCoverPhotoUrlSizes
     */
    medium?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonCampaignCoverPhotoUrlSizes
     */
    small?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonCampaignCoverPhotoUrlSizes
     */
    xlarge?: string;
    /**
     * 
     * @type {string}
     * @memberof PatreonCampaignCoverPhotoUrlSizes
     */
    xsmall?: string;
}

/**
 * Check if a given object implements the PatreonCampaignCoverPhotoUrlSizes interface.
 */
export function instanceOfPatreonCampaignCoverPhotoUrlSizes(value: object): value is PatreonCampaignCoverPhotoUrlSizes {
    return true;
}

export function PatreonCampaignCoverPhotoUrlSizesFromJSON(json: any): PatreonCampaignCoverPhotoUrlSizes {
    return PatreonCampaignCoverPhotoUrlSizesFromJSONTyped(json, false);
}

export function PatreonCampaignCoverPhotoUrlSizesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatreonCampaignCoverPhotoUrlSizes {
    if (json == null) {
        return json;
    }
    return {
        
        'large': json['large'] == null ? undefined : json['large'],
        'medium': json['medium'] == null ? undefined : json['medium'],
        'small': json['small'] == null ? undefined : json['small'],
        'xlarge': json['xlarge'] == null ? undefined : json['xlarge'],
        'xsmall': json['xsmall'] == null ? undefined : json['xsmall'],
    };
}

export function PatreonCampaignCoverPhotoUrlSizesToJSON(json: any): PatreonCampaignCoverPhotoUrlSizes {
    return PatreonCampaignCoverPhotoUrlSizesToJSONTyped(json, false);
}

export function PatreonCampaignCoverPhotoUrlSizesToJSONTyped(value?: PatreonCampaignCoverPhotoUrlSizes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'large': value['large'],
        'medium': value['medium'],
        'small': value['small'],
        'xlarge': value['xlarge'],
        'xsmall': value['xsmall'],
    };
}

