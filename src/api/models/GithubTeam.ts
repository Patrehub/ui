/* tslint:disable */
/* eslint-disable */
/**
 * Patrehub API
 * This is a description of what this does
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GithubTeam
 */
export interface GithubTeam {
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof GithubTeam
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    nodeId: string;
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    privacy: string;
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    htmlUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    membersUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubTeam
     */
    repositoriesUrl: string;
}

/**
 * Check if a given object implements the GithubTeam interface.
 */
export function instanceOfGithubTeam(value: object): value is GithubTeam {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('nodeId' in value) || value['nodeId'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('privacy' in value) || value['privacy'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('htmlUrl' in value) || value['htmlUrl'] === undefined) return false;
    if (!('membersUrl' in value) || value['membersUrl'] === undefined) return false;
    if (!('repositoriesUrl' in value) || value['repositoriesUrl'] === undefined) return false;
    return true;
}

export function GithubTeamFromJSON(json: any): GithubTeam {
    return GithubTeamFromJSONTyped(json, false);
}

export function GithubTeamFromJSONTyped(json: any, ignoreDiscriminator: boolean): GithubTeam {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'id': json['id'],
        'nodeId': json['node_id'],
        'slug': json['slug'],
        'description': json['description'],
        'privacy': json['privacy'],
        'url': json['url'],
        'htmlUrl': json['html_url'],
        'membersUrl': json['members_url'],
        'repositoriesUrl': json['repositories_url'],
    };
}

export function GithubTeamToJSON(json: any): GithubTeam {
    return GithubTeamToJSONTyped(json, false);
}

export function GithubTeamToJSONTyped(value?: GithubTeam | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'id': value['id'],
        'node_id': value['nodeId'],
        'slug': value['slug'],
        'description': value['description'],
        'privacy': value['privacy'],
        'url': value['url'],
        'html_url': value['htmlUrl'],
        'members_url': value['membersUrl'],
        'repositories_url': value['repositoriesUrl'],
    };
}

